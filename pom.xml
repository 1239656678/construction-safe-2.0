<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.dico</groupId>
    <artifactId>dico-admin</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>dico-admin</name>
    <description>Demo project for Spring Boot</description>

    <modules>
        <!-- 服务注册中心 -->
        <module>eureka</module>
        <!-- 网关路由模块 -->
        <module>gateway</module>
        <!-- springboot admin 服务监控模块 -->
        <module>admin</module>
        <!-- 服务配置模块 -->
        <module>config</module>
        <!-- 日志采集模块 -->
        <module>sleuth</module>
        <!-- 代码生成模块 -->
        <module>generator</module>
        <!-- 工具模块 -->
        <module>dico-tools</module>

        <!-- 系统模块(用户、角色、菜单、部门、鉴权) -->
        <module>dico-base</module>

        <!-- 安全管理系统业务模块开始 -->
        <module>construction-safe</module>

        <!-- 手机端接口 -->
        <module>sms-interface</module>

        <!-- activiti流程服务 -->
        <module>activiti</module>
    </modules>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.0.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <cloud.version>2.0.1.RELEASE</cloud.version>
        <cloud-config-server.version>2.0.1.RELEASE</cloud-config-server.version>
        <cloud-config-client.version>2.0.1.RELEASE</cloud-config-client.version>
        <hystrix.version>2.0.2.RELEASE</hystrix.version>
        <admin-server.version>2.0.2</admin-server.version>
        <admin-client.version>2.0.2</admin-client.version>
        <eureka.version>2.0.1.RELEASE</eureka.version>
        <eureka-client.version>2.0.1.RELEASE</eureka-client.version>
        <security.version>2.1.0.RELEASE</security.version>
        <openfeign.version>2.0.2.RELEASE</openfeign.version>
        <webflux.version>2.5.12</webflux.version>
        <gateway.version>2.0.2.RELEASE</gateway.version>
        <cloud-sleuth.version>2.0.0.RELEASE</cloud-sleuth.version>
        <zipkin-ui.version>2.11.10</zipkin-ui.version>
        <zipkin-server.version>2.11.10</zipkin-server.version>
        <cloud-starter-zipkin.version>2.0.0.RELEASE</cloud-starter-zipkin.version>
        <jjwt.version>0.9.0</jjwt.version>
        <shiro.version>1.4.0</shiro.version>
        <shiro-ehcache.version>1.4.0</shiro-ehcache.version>
        <dico-tools.version>0.0.3-SNAPSHOT</dico-tools.version>
        <fastjson.version>1.2.41</fastjson.version>
        <swagger2.version>2.7.0</swagger2.version>
        <swagger-ui.version>2.7.0</swagger-ui.version>
        <mobile.version>1.1.5.RELEASE</mobile.version>
        <dozer.version>5.5.1</dozer.version>
        <sleuth-zipkin.version>2.0.0.RELEASE</sleuth-zipkin.version>
        <zipkin-ui.version>2.11.7</zipkin-ui.version>
        <boot-jdbc.version>2.0.3.RELEASE</boot-jdbc.version>
        <zipkin-mysql.version>2.4.9</zipkin-mysql.version>
        <fegin-upload.version>3.3.0</fegin-upload.version>
        <seata-all.version>0.6.1</seata-all.version>
        <docker.image.prefix>com.dico</docker.image.prefix>
        <zxing-core.version>3.3.0</zxing-core.version>
        <zxing-javase.version>3.3.0</zxing-javase.version>

    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Greenwich.M3</version>
                <type>pom</type>
            </dependency>
            <!-- springcloud config 依赖 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter</artifactId>
                <version>${cloud.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-config-server</artifactId>
                <version>${cloud-config-server.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-config-client</artifactId>
                <version>${cloud-config-client.version}</version>
            </dependency>
            <!-- 熔断机制依赖 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-hystrix</artifactId>
                <version>${hystrix.version}</version>
            </dependency>
            <!-- springboot admin 依赖 -->
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-server</artifactId>
                <version>${admin-server.version}</version>
            </dependency>
            <dependency>
                <groupId>de.codecentric</groupId>
                <artifactId>spring-boot-admin-starter-client</artifactId>
                <version>${admin-client.version}</version>
            </dependency>
            <!-- eureka服务注册组件 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-eureka-server</artifactId>
                <version>${eureka.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
                <version>${eureka-client.version}</version>
            </dependency>
            <!-- eureka服务用户认证包 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-security</artifactId>
                <version>${security.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-openfeign</artifactId>
                <version>${openfeign.version}</version>
            </dependency>
            <!-- 网关路由 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-webflux</artifactId>
                <version>${webflux.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-gateway</artifactId>
                <version>${gateway.version}</version>
            </dependency>
            <!-- 用户鉴权包 -->
            <dependency>
                <groupId>io.jsonwebtoken</groupId>
                <artifactId>jjwt</artifactId>
                <version>${jjwt.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-spring-boot-starter</artifactId>
                <version>${shiro.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.shiro</groupId>
                <artifactId>shiro-ehcache</artifactId>
                <version>${shiro-ehcache.version}</version>
            </dependency>
            <!-- dico私有处理工具包 -->
            <dependency>
                <groupId>com.dico</groupId>
                <artifactId>dico-tools</artifactId>
                <version>${dico-tools.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>*</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- json处理包 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <!-- api接口包 -->
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger2.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger-ui.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.mobile</groupId>
                <artifactId>spring-mobile-device</artifactId>
                <version>${mobile.version}</version>
            </dependency>
            <!-- sleuth配置 -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-sleuth</artifactId>
                <version>${sleuth-zipkin.version}</version>
            </dependency>
            <!-- 引入zipkin  -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-starter-zipkin</artifactId>
                <version>${sleuth-zipkin.version}</version>
            </dependency>
            <dependency>
                <groupId>io.zipkin.java</groupId>
                <artifactId>zipkin-autoconfigure-ui</artifactId>
                <version>${zipkin-ui.version}</version>
            </dependency>
            <!-- zipkin 服务类-->
            <dependency>
                <groupId>io.zipkin.java</groupId>
                <artifactId>zipkin-server</artifactId>
                <version>${zipkin-ui.version}</version>
            </dependency>
            <!-- zipkin 存储到数据库需要引入此类 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-jdbc</artifactId>
                <version>${boot-jdbc.version}</version>
            </dependency>
            <dependency>
                <groupId>io.zipkin.java</groupId>
                <artifactId>zipkin-autoconfigure-storage-mysql</artifactId>
                <version>${zipkin-ui.version}</version>
            </dependency>
            <dependency>
                <groupId>io.zipkin.java</groupId>
                <artifactId>zipkin-storage-mysql</artifactId>
                <version>${zipkin-mysql.version}</version>
            </dependency>
            <!-- 实体值转换工具类 -->
            <dependency>
                <groupId>net.sf.dozer</groupId>
                <artifactId>dozer</artifactId>
                <version>${dozer.version}</version>
            </dependency>

            <!-- fegin文件上传工具包 -->
            <dependency>
                <groupId>io.github.openfeign.form</groupId>
                <artifactId>feign-form-spring</artifactId>
                <version>${fegin-upload.version}</version>
            </dependency>
            <dependency>
                <groupId>io.github.openfeign.form</groupId>
                <artifactId>feign-form</artifactId>
                <version>${fegin-upload.version}</version>
            </dependency>

            <!-- 分布式事务处理 -->
            <dependency>
                <groupId>io.seata</groupId>
                <artifactId>seata-all</artifactId>
                <version>${seata-all.version}</version>
            </dependency>

            <!-- 二维码工具依赖 -->
            <dependency>
                <groupId>com.google.zxing</groupId>
                <artifactId>core</artifactId>
                <version>${zxing-core.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.zxing</groupId>
                <artifactId>javase</artifactId>
                <version>${zxing-javase.version}</version>
            </dependency>

            <!-- 定时任务依赖 -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-quartz</artifactId>
                <version>2.1.4.RELEASE</version>
            </dependency>
      </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!--<plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>-->
            <!-- docker打包插件 -->
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.4.11</version>
                <configuration>
                    <dockerHost>http://192.168.1.19:2375</dockerHost>
                    <imageName>${docker.image.prefix}/${project.artifactId}:${project.version}</imageName>
                    <dockerDirectory>src/main/docker</dockerDirectory>
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <directory>${project.build.directory}</directory>
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <repositories>
        <repository>
            <id>spring-snapshot</id>
            <name>Spring Snapshot Repository</name>
            <url>https://repo.spring.io/snapshot</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>spring-milestones</id>
            <name>Spring Milestones</name>
            <url>http://repo.spring.io/milestone</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>
</project>
